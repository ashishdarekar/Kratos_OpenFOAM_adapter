FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1; //need to check

// Geometry parameters
f -0.005;   // z-front
b 0.005;    // z-back

//Grid refinement parameters
H1 4;           //Nx for block 0
V1 12;          //Ny for block 0
H2 10;          //Nx for block 1,2
V2 5;           //Ny for block 1.2
H3 10;          //Nx for block 3
V3 1;           //Ny for block 3
H4 40;          //Nx for block 4,5
V4 7;           //Ny for block 4,5
H6 5;           //Nx for block 6
V6 10;          //Ny for block 6
H7 20;          //Nx for block 7,8
V7 5;           //Ny for block 7,8
H9 5;           //Nx for block 9,10
V9 2;           //Ny for block 9,10
H11 10;         //Nx for block 11,12
V11 1;          //Ny for block 11,12

vertices
(
    //Block 0
    (0.0 0.0 $f)     //vertex 0
    (4.0 0.0 $f)     //vertex 1
    (4.0 12.0 $f)    //vertex 2
    (0.0 12.0 $f)    //vertex 3

    (0.0 0.0 $b)     //vertex 4
    (4.0 0.0 $b)     //vertex 5
    (4.0 12.0 $b)    //vertex 6
    (0.0 12.0 $b)    //vertex 7

    //Block 1
    (19.5 0.0 $f)    //vertex 8
    (19.5 5.0 $f)    //vertex 9
    (4.0 5.0 $f)     //vertex 10

    (19.5 0.0 $b)    //vertex 11
    (19.5 5.0 $b)    //vertex 12
    (4.0 5.0 $b)     //vertex 13

    //Block 2
    (4.0 7.0 $f)     //vertex 14
    (19.5 7.0 $f)    //vertex 15
    (19.5 12.0 $f)   //vertex 16

    (4.0 7.0 $b)     //vertex 17
    (19.5 7.0 $b)    //vertex 18
    (19.5 12.0 $b)   //vertex 19

    //Block 3
    (9.5 5.0 $f)     //vertex 20
    (9.5 7.0 $f)     //vertex 21

    (9.5 5.0 $b)     //vertex 22
    (9.5 7.0 $b)     //vertex 23

    //Block 4
    (6.0 5.0 $f)     //vertex 24
    (9.5 5.7 $f)     //vertex 25
    (6.0 5.7 $f)     //vertex 26

    (6.0 5.0 $b)     //vertex 27
    (9.5 5.7 $b)     //vertex 28
    (6.0 5.7 $b)     //vertex 29

    //Block 5
    (6.0 6.3 $f)     //vertex 30
    (9.5 6.3 $f)     //vertex 31
    (6.0 7.0 $f)     //vertex 32

    (6.0 6.3 $b)     //vertex 33
    (9.5 6.3 $b)     //vertex 34
    (6.0 7.0 $b)     //vertex 35

    //Block 6
    (4.0 5.5 $f)     //vertex 36
    (4.5 5.5 $f)     //vertex 37
    (4.5 6.5 $f)     //vertex 38
    (4.0 6.5 $f)     //vertex 39

    (4.0 5.5 $b)     //vertex 40
    (4.5 5.5 $b)     //vertex 41
    (4.5 6.5 $b)     //vertex 42
    (4.0 6.5 $b)     //vertex 43

    //Block 7
    //Block 8

    //Block 9
    (5.5 5.5 $f)     //vertex 44
    (6.0 5.5 $f)     //vertex 45
    (5.5 5.7 $f)     //vertex 46

    (5.5 5.5 $b)     //vertex 47
    (6.0 5.5 $b)     //vertex 48
    (5.5 5.7 $b)     //vertex 49

    //Block 10
    (5.5 6.3 $f)     //vertex 50
    (6.0 6.5 $f)     //vertex 51
    (5.5 6.5 $f)     //vertex 52

    (5.5 6.3 $b)     //vertex 53
    (6.0 6.5 $b)     //vertex 54
    (5.5 6.5 $b)     //vertex 55

    //Block 11
    (19.5 5.7 $f)    //vertex 56

    (19.5 6.3 $b)    //vertex 57

    //Block 12
    (19.5 5.7 $f)    //vertex 58

    (19.5 6.3 $b)    //vertex 59

);

edges
(
);

blocks
(
    hex (  0   1   2   3   4   5   6   7) ($H1 $V1 1) simpleGrading (1 1 1)  //block 0
    hex (  1   8   9  10   5  11  12  13) ($H2 $V2 1) simpleGrading (1 1 1)  //block 1
    hex ( 14  15  16   2  17  18  19  6)  ($H2 $V2 1) simpleGrading (1 1 1)  //block 2
    hex ( 25  56  57  31  28  58  59  34) ($H3 $V3 1) simpleGrading (1 1 1)  //block 3
    hex ( 20   9  15  14  13  12  18  17) ($H2 $V3 1) simpleGrading (1 1 1)  //block 3
    hex ( 24  20  25  26  27  22  28  29) ($H4 $V4 1) simpleGrading (1 1 1)  //block 4
    hex ( 30  31  21  32  33  34  23  35) ($H4 $V4 1) simpleGrading (1 1 1)  //block 5
    hex ( 36  37  38  39  40  41  42  43) ($H6 $V6 1) simpleGrading (1 1 1)  //block 6
    hex ( 10  24  45  36  13  27  48  40) ($H7 $V7 1) simpleGrading (1 1 1)  //block 7
    hex ( 39  51  32  14  43  51  35  17) ($H7 $V7 1) simpleGrading (1 1 1)  //block 8
    hex ( 44  45  26  46  47  48  29  49) ($H9 $V9 1) simpleGrading (1 1 1)  //block 9
    hex ( 50  30  51  52  53  33  54  55) ($H9 $V9 1) simpleGrading (1 1 1)  //block 10
    hex ( 20   9  56  25  22  12  58  28) ($H11 $V11 1) simpleGrading (1 1 1)  //block 11
    hex ( 31  57  15  21  34  59  18  23) ($H11 $V11 1) simpleGrading (1 1 1)  //block 12

);

boundary
(
    front
    {
        type empty;
        faces
        (
            ( 0  1  2  3)
            ( 1  8  9 10)
            (14 15 16  2)
            (20  9 56 25)
            (25 56 57 31)
            (31 57 15 21)
            (24 20 25 26)
            (30 31 21 32)
            (36 37 38 39)
            (10 24 45 36)
            (39 51 32 14)
            (44 45 26 46)
            (50 30 51 52)
        );
    }

    back
    {
        type empty;
        faces
        (
            ( 4  5  6  7)
            ( 5 11 12 13)
            (17 18 19  6)
            (28 58 59 34)
            (22 12 58 28)
            (34 59 18 23)
            (27 22 28 29)
            (33 34 23 35)
            (40 41 42 43)
            (13 27 48 40)
            (43 54 35 17)
            (47 48 29 49)
            (53 33 54 55)
        );
    }

    inlet
    {
        type patch;
        faces
        (
            ( 0  4  7  3)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            ( 8 11 12  9)
            ( 9 12 58 56)
            (56 57 59 58)
            (57 59 18 15)
            (15 18 19 16)
        );
    }

    top
    {
        type wall;
        faces
        (
            ( 7  3   2   6)
            ( 6  2  16  19)
        );
    }

    bottom
    {
        type wall;
        faces
        (
            (  5  1  0  4)
            ( 11  8  1  5)
        );
    }

    flap
    {
        type wall;
        faces
        (
            (29 26 46 49)
            (28 25 26 29)
            (33 30 31 34)
            (53 50 30 33)
            (25 28 34 31)
        );
    }

    squareblock
    {
        type wall;
        faces
        (
            (55 52 50 53)
            (49 46 44 47)
            (42 38 52 55)
            (47 44 37 41)
            (42 38 37 41)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
